[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "plate-resort"
version = "2.0.25"
description = "Plate Resort Control System - Server-Client Architecture for Laboratory Plate Management"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Kelvin Chow", email = "kth.chow@utoronto.ca"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Topic :: System :: Hardware :: Hardware Drivers",
]
keywords = ["laboratory", "automation", "robotics", "dynamixel", "plate-handling", "prefect"]
requires-python = ">=3.8"
dependencies = [
    "dynamixel-sdk>=3.7.51",
    "pyyaml>=6.0",
    # Pin Prefect minor version to ensure stable deployment behavior; update intentionally in future releases
    "prefect==3.4.23",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "black>=23.0",
    "flake8>=6.0",
    "mypy>=1.0",
]

[project.urls]
Homepage = "https://github.com/AccelerationConsortium/plate-RESORT"
Repository = "https://github.com/AccelerationConsortium/plate-RESORT"
Issues = "https://github.com/AccelerationConsortium/plate-RESORT/issues"
Documentation = "https://github.com/AccelerationConsortium/plate-RESORT/blob/main/README.md"

[project.scripts]
plate-resort-interactive = "plate_resort.client.interactive:main"
plate-resort-worker = "plate_resort.workflows.worker_service:main"
plate-resort-deploy = "plate_resort.workflows.deploy:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["plate_resort*"]

[tool.setuptools.package-data]
plate_resort = [
    "config/*.yaml",
    "config/*.template"
]